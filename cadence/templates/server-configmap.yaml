apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cadence.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "cadence.name" . }}
    helm.sh/chart: {{ include "cadence.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
data:
  config_template.yaml: |-
    log:
      stdout: true
      level: {{ .Values.server.config.logLevel | quote }}

    persistence:
      defaultStore: default
      visibilityStore: visibility
      numHistoryShards: {{ .Values.server.config.numHistoryShards }}
      datastores:
        default:
          {{- if eq (include "cadence.persistence.driver" (list . "default")) "cassandra" }}
          cassandra:
            hosts: {{ include "cadence.persistence.cassandra.hosts" (list . "default") }}
            port: {{ include "cadence.persistence.cassandra.port" (list . "default") }}
            keyspace: {{ .Values.server.config.persistence.default.cassandra.keyspace }}
            consistency: {{ .Values.server.config.persistence.default.cassandra.consistency }}
            user: {{ .Values.server.config.persistence.default.cassandra.user }}
            password: {{ `{{ .Env.CADENCE_STORE_PASSWORD }}` }}
            {{- if .Values.server.config.persistence.default.cassandra.datacenter }}
            datacenter: {{ .Values.server.config.persistence.default.cassandra.datacenter | quote }}
            {{- end }}
            {{- if .Values.server.config.persistence.default.cassandra.maxQPS }}
            maxQPS: {{ .Values.server.config.persistence.default.cassandra.maxQPS }}
            {{- end }}
            {{- if .Values.server.config.persistence.default.cassandra.maxConns }}
            maxConns: {{ .Values.server.config.persistence.default.cassandra.maxConns }}
            {{- end }}
          {{- end }}
          {{- if eq (include "cadence.persistence.driver" (list . "default")) "sql" }}
          sql:
            driverName: {{ include "cadence.persistence.sql.driver" (list . "default") }}
            databaseName: {{ .Values.server.config.persistence.default.sql.database }}
            connectAddr: "{{ include "cadence.persistence.sql.host" (list . "default") }}:{{ include "cadence.persistence.sql.port" (list . "default") }}"
            connectProtocol: "tcp"
            user: {{ include "cadence.persistence.sql.user" (list . "default") }}
            password: {{ `{{ .Env.CADENCE_STORE_PASSWORD }}` }}
            {{- if .Values.server.config.persistence.default.sql.maxConns }}
            maxConns: {{ .Values.server.config.persistence.default.sql.maxConns }}
            {{- end }}
            {{- if .Values.server.config.persistence.default.sql.maxIdleConns }}
            maxIdleConns: {{ .Values.server.config.persistence.default.sql.maxIdleConns }}
            {{- end }}
            {{- if .Values.server.config.persistence.default.sql.maxConnLifetime }}
            maxConnLifetime: {{ .Values.server.config.persistence.default.sql.maxConnLifetime | quote }}
            {{- end }}
            {{- if .Values.server.config.persistence.default.sql.maxQPS }}
            maxQPS: {{ .Values.server.config.persistence.default.sql.maxQPS }}
            {{- end }}
            {{- if .Values.server.config.persistence.default.sql.attributes }}
            connectAttributes:
            {{- range $key, $value := .Values.server.config.persistence.default.sql.attributes }}
              {{ $key }}: {{ $value }}
            {{- end }}
            {{- end }}
          {{- end }}
        visibility:
          {{- if eq (include "cadence.persistence.driver" (list . "visibility")) "cassandra" }}
          cassandra:
            hosts: {{ include "cadence.persistence.cassandra.hosts" (list . "visibility") }}
            port: {{ include "cadence.persistence.cassandra.port" (list . "visibility") }}
            keyspace: {{ .Values.server.config.persistence.visibility.cassandra.keyspace }}
            consistency: {{ .Values.server.config.persistence.visibility.cassandra.consistency }}
            user: {{ .Values.server.config.persistence.visibility.cassandra.user }}
            password: {{ `{{ .Env.CADENCE_VISIBILITY_STORE_PASSWORD }}` }}
            {{- if .Values.server.config.persistence.visibility.cassandra.datacenter }}
            datacenter: {{ .Values.server.config.persistence.visibility.cassandra.datacenter | quote }}
            {{- end }}
            {{- if .Values.server.config.persistence.visibility.cassandra.maxQPS }}
            maxQPS: {{ .Values.server.config.persistence.visibility.cassandra.maxQPS }}
            {{- end }}
            {{- if .Values.server.config.persistence.visibility.cassandra.maxConns }}
            maxConns: {{ .Values.server.config.persistence.visibility.cassandra.maxConns }}
            {{- end }}
          {{- end }}
          {{- if eq (include "cadence.persistence.driver" (list . "visibility")) "sql" }}
          sql:
            driverName: {{ include "cadence.persistence.sql.driver" (list . "visibility") }}
            databaseName: {{ .Values.server.config.persistence.visibility.sql.database }}
            connectAddr: "{{ include "cadence.persistence.sql.host" (list . "visibility") }}:{{ include "cadence.persistence.sql.port" (list . "visibility") }}"
            connectProtocol: "tcp"
            user: {{ include "cadence.persistence.sql.user" (list . "visibility") }}
            password: {{ `{{ .Env.CADENCE_VISIBILITY_STORE_PASSWORD }}` }}
            {{- if .Values.server.config.persistence.visibility.sql.maxConns }}
            maxConns: {{ .Values.server.config.persistence.visibility.sql.maxConns }}
            {{- end }}
            {{- if .Values.server.config.persistence.visibility.sql.maxIdleConns }}
            maxIdleConns: {{ .Values.server.config.persistence.visibility.sql.maxIdleConns }}
            {{- end }}
            {{- if .Values.server.config.persistence.visibility.sql.maxConnLifetime }}
            maxConnLifetime: {{ .Values.server.config.persistence.visibility.sql.maxConnLifetime | quote }}
            {{- end }}
            {{- if .Values.server.config.persistence.visibility.sql.maxQPS }}
            maxQPS: {{ .Values.server.config.persistence.visibility.sql.maxQPS }}
            {{- end }}
            {{- if .Values.server.config.persistence.visibility.sql.attributes }}
            connectAttributes:
            {{- range $key, $value := .Values.server.config.persistence.visibility.sql.attributes }}
              {{ $key }}: {{ $value }}
            {{- end }}
            {{- end }}
          {{- end }}

    ringpop:
      name: cadence
      bootstrapMode: dns
      bootstrapHosts:
        - {{ include "cadence.componentname" (list . "frontend-headless") }}:{{ .Values.server.frontend.service.port }}
        - {{ include "cadence.componentname" (list . "history-headless") }}:{{ .Values.server.history.service.port }}
        - {{ include "cadence.componentname" (list . "matching-headless") }}:{{ .Values.server.matching.service.port }}
        - {{ include "cadence.componentname" (list . "worker-headless") }}:{{ .Values.server.worker.service.port }}
      maxJoinDuration: 30s

    services:
      frontend:
        rpc:
          port: {{ include "cadence.frontend.internalPort" . }}
          bindOnIP: "0.0.0.0"
        metrics:
          tags:
            type: frontend
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.frontend.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"

      history:
        rpc:
          port: {{ include "cadence.history.internalPort" . }}
          bindOnIP: "0.0.0.0"
        metrics:
          tags:
            type: history
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.history.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"

      matching:
        rpc:
          port: {{ include "cadence.matching.internalPort" . }}
          bindOnIP: "0.0.0.0"
        metrics:
          tags:
            type: matching
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.matching.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"

      worker:
        rpc:
          port: {{ include "cadence.worker.internalPort" . }}
          bindOnIP: "0.0.0.0"
        metrics:
          tags:
            type: worker
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.worker.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"

    clusterMetadata:
      enableGlobalDomain: false
      failoverVersionIncrement: 10
      masterClusterName: "active"
      currentClusterName: "active"
      clusterInformation:
        active:
          enabled: true
          initialFailoverVersion: 0
          rpcName: "cadence-frontend"
          rpcAddress: "127.0.0.1:7933"

    dcRedirectionPolicy:
      policy: "noop"
      toDC: ""

    archival:
      status: "disabled"

    publicClient:
      hostPort: "{{ include "cadence.componentname" (list . "frontend") }}:{{ .Values.server.frontend.service.port }}"
