image:
  repository: improbable/thanos
  tag: v0.6.0
  pullPolicy: IfNotPresent

store:
  enabled: true
  # Maximum size of items held in the index cache.
  indexCacheSize: 250MB
  # Maximum size of concurrently allocatable bytes for chunks.
  chunkPoolSize: 2GB
  # Maximum amount of samples returned via a single series call. 0 means no limit.
  # NOTE: for efficiency we take 120 as the number of samples in chunk (it cannot be bigger than that),
  # so the actual number of samples might be lower, even though the maximum could be hit.
  grpcSeriesSampleLimit: 0
  # Maximum number of concurrent Series calls.
  grpcSeriesMaxConcurrency: 20
  # Repeat interval for syncing the blocks between local and remote view.
  syncBlockDuration: 3m
  # Number of goroutines to use when syncing blocks from object storage.
  blockSyncConcurrency: 20
  #
  logLevel: debug
  # Add extra environment variables to compact
  extraEnv: []
  # - name: ENV
  #   value: value
  #
  # Add extra arguments to the compact service
  extraArgs: []
  # - "--extraargs=extravalue"
  #
  replicaCount: 1
  #
  labels:
  #  cluster: example
  #
  # Extra annotations for compact pod template
  annotations: {}
  #  example.com: default
  #
  # Add extra labels to compact deployment
  deploymentLabels: {}
  #  extraLabel: extraLabelValue
  #
  # Add extra annotations to compact deployment
  deploymentAnnotations: {}
  #  extraAnnotation: extraAnnotationValue
  # Enable metrics collecting for compat service
  metrics:
    # This is the Prometheus annotation type scraping configuration
    annotations:
      enabled: false
    # Enable ServiceMonitor https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false
  # The grpc endpoint to communicate with other components
  grpc:
    # grpc listen port number
    port: 10901
    # Service definition for query grpc service
    service:
      # Annotations to query grpc service
      annotations: {}
  # The http endpoint to communicate with other components
  http:
    # http listen port number
    port: 10902
    # Service definition for query http service
    service:
      type: ClusterIP
      # Annotations to query http service
      annotations: {}
  # Optional securityContext
  securityContext: {}
  resources: {}
  #  limits:
  #    cpu: 2000m
  #    memory: 16Gi
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #
  # Node tolerations for server scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
  #
  # Node labels for compact pod assignment
  # Ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}
  #
  # Pod affinity
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  affinity: {}

query:
  enabled: true
  # Prefix for API and UI endpoints. This allows thanos UI to be served on a sub-path.
  # This option is analogous to --web.route-prefix of Promethus.
  webRoutePrefix: ""
  # Static prefix for all HTML links and redirect
  #  URLs in the UI query web interface. Actual
  #  endpoints are still served on / or the
  #  web.route-prefix. This allows thanos UI to be
  #  served behind a reverse proxy that strips a URL
  #  sub-path.
  webExternalPrefix: ""
  # Name of HTTP request header used for dynamic prefixing of UI links and redirects.
  # This option is ignored if web.external-prefix argument is set. Security risk: enable this
  # option only if a reverse proxy in front of thanos is resetting the header. The --web.prefix-header=X-Forwarded-Prefix option
  # can be useful, for example, if Thanos UI is served via Traefik reverse proxy with PathPrefixStrip option enabled, which sends the
  # stripped prefix value in X-Forwarded-Prefix header. This allows thanos UI to be served on a sub-path
  webPrefixHeader: ""
  # https://github.com/improbable-eng/thanos/issues/1015
  storeDNSResolver: miekgdns
  # Enable DNS discovery for stores
  storeDNSDiscovery: true
  # Addresses of statically configured store API servers (repeatable).
  # The scheme may be prefixed with 'dns+' or 'dnssrv+' to detect store API servers through respective DNS lookups.
  stores: []
  #  - "dnssrv+_grpc._tcp.<service>.<namespace>.svc.cluster.local"
  #
  # Log filtering level.
  logLevel: debug
  # Add extra environment variables to compact
  extraEnv: []
  # - name: ENV
  #   value: value
  #
  # Add extra arguments to the compact service
  extraArgs: []
  # - "--extraargs=extravalue"
  #
  #
  replicaCount: 1
  # The grpc endpoint to communicate with other components
  grpc:
    # grpc listen port number
    port: 10901
    # Service definition for query grpc service
    service:
      # Annotations to query grpc service
      annotations: {}
  # The http endpoint to communicate with other components
  http:
    # http listen port number
    port: 10902
    # Service definition for query http service
    service:
      type: ClusterIP
      # Annotations to query http service
      annotations: {}

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    labels: {}
    path: /
    hosts:
      - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  certSecretName: ""
  labels:
  #  cluster: example
  #
  # Extra annotations for compact pod template
  annotations: {}
  #  example.com: default
  #
  # Add extra labels to compact deployment
  deploymentLabels: {}
  #  extraLabel: extraLabelValue
  #
  # Add extra annotations to compact deployment
  deploymentAnnotations: {}
  #  extraAnnotation: extraAnnotationValue
  #
  # Enable metrics collecting for compat service
  metrics:
    # This is the Prometheus annotation type scraping configuration
    annotations:
      enabled: false
    # Enable ServiceMonitor https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false

  # Optional securityContext
  securityContext: {}
  resources: {}
  #  limits:
  #    cpu: 2000m
  #    memory: 16Gi
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #
  # Node tolerations for server scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
  #
  # Node labels for compact pod assignment
  # Ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}
  #
  # Pod affinity
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  affinity: {}

compact:
  enabled: true
  # Minimum age of fresh (non-compacted) blocks before they are being processed.
  # Malformed blocks older than the maximum of consistency-delay and 30m0s will be removed.
  consistencyDelay: 30m
  # How long to retain raw samples in bucket. 0d - disables this retention
  retentionResolutionRaw: 30d
  # How long to retain samples of resolution 1 (5 minutes) in bucket. 0d - disables this retention
  retentionResolution5m: 120d
  # How long to retain samples of resolution 2 (1 hour) in bucket. 0d - disables this retention
  retentionResolution1h: 1y
  # Number of goroutines to use when syncing block metadata from object storage.
  compactConcurrency: 20
  # Number of goroutines to use when compacting groups.
  blockSyncConcurrency: 1
  # Log filtering level.
  logLevel: debug
  # Compact service listening http port
  http:
    port: 10902
  # Add extra environment variables to compact
  extraEnv:
  # - name: ENV
  #   value: value
  #
  # Add extra arguments to the compact service
  extraArgs:
  # - "--extraargs=extravalue"
  #
  # Data volume for the compactor to store temporary data defaults to emptyDir
  dataVolume:
    backend: {}
    #  persistentVolumeClaim:
    #    claimName: compact-data-volume
  # Extra labels for compact pod template
  labels: {}
  #  cluster: example
  #
  # Extra annotations for compact pod template
  annotations: {}
  #  example.com: default
  #
  # Add extra labels to compact deployment
  deploymentLabels: {}
  #  extraLabel: extraLabelValue
  #
  # Add extra annotations to compact deployment
  deploymentAnnotations: {}
  #  extraAnnotation: extraAnnotationValue
  #
  # Enable metrics collecting for compat service
  metrics:
    # This is the Prometheus annotation type scraping configuration
    annotations:
      enabled: false
    # Enable ServiceMonitor https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false

  # Optional securityContext
  securityContext: {}
  resources: {}
  #  limits:
  #    cpu: 2000m
  #    memory: 16Gi
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #
  # Node tolerations for server scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
  #
  # Node labels for compact pod assignment
  # Ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}
  #
  # Pod affinity
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  affinity: {}

objstore:
  provider: gcs
  configFile: bucket.yaml
  config: ""
  gcsCredentials: ""

replicaLabelName: replica
