image:
  repository: improbable/thanos
  tag: v0.6.0
  pullPolicy: IfNotPresent

store:
  enabled: true
  # annotations:
  replicaCount: 1
  monitoring:
    enabled: true
  http:
    port: 10902
  grpc:
    port: 10901
  logLevel: debug
  securityContext: {}
  resources: {}
  extraArgs: []
  certSecretName: ""

query:
  enabled: true
  # annotations:
  replicaCount: 1
  monitoring:
    enabled: true
  grpc:
    port: 10901
  http:
    port: 10902
  logLevel: debug
  resources: {}
  extraArgs: []
  livenessProbe: {}
    # httpGet:
    #   path: /-/healthy
    #   port: 10902
  readinessProbe: {}
    # httpGet:
    #   path: "/-/ready"
    #   port: 10902

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    labels: {}
    path: /
    hosts:
      - chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  securityContext: {}
  certSecretName: ""

compact:
  enabled: true
  # Minimum age of fresh (non-compacted) blocks before they are being processed.
  # Malformed blocks older than the maximum of consistency-delay and 30m0s will be removed.
  consistencyDelay: 30m
  # How long to retain raw samples in bucket. 0d - disables this retention
  retentionResolutionRaw: 30d
  # How long to retain samples of resolution 1 (5 minutes) in bucket. 0d - disables this retention
  retentionResolution5m: 120d
  # How long to retain samples of resolution 2 (1 hour) in bucket. 0d - disables this retention
  retentionResolution1h: 1y
  # Number of goroutines to use when syncing block metadata from object storage.
  compactConcurrency: 20
  # Number of goroutines to use when compacting groups.
  blockSyncConcurrency: 1
  # Log filtering level.
  logLevel: debug
  # Compact service listening http port
  http:
    port: 10902
  # Add extra environment variables to compact
  extraEnv:
  # - name: ENV
  #   value: value
  #
  # Add extra arguments to the compact service
  extraArgs:
  # - "--extraargs=extravalue"
  #
  # Data volume for the compactor to store temporary data defaults to emptyDir
  dataVolume:
    backend: {}
    #  persistentVolumeClaim:
    #    claimName: compact-data-volume
  # Extra labels for compact pod template
  labels:
  #  cluster: example
  #
  # Extra annotations for compact pod template
  annotations:
  #  example.com: default
  #
  # Add extra labels to compact deployment
  deploymentLabels:
  #  extraLabel: extraLabelValue
  #
  # Add extra annotations to compact deployment
  deploymentAnnotations:
  #  extraAnnotation: extraAnnotationValue
  #
  # Enable metrics collecting for compat service
  metrics:
    # This is the Prometheus annotation type scraping configuration
    annotations:
      enabled: false
    # Enable ServiceMonitor https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false

  # Optional securityContext
  securityContext: {}
  resources: {}
  #  limits:
  #    cpu: 2000m
  #    memory: 16Gi
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #
  # Node tolerations for server scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
  #
  # Node labels for compact pod assignment
  # Ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}
  #
  # Pod affinity
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  affinity: {}


cluster:
  enabled: true
  address: 0.0.0.0
  port: 10900

objstore:
  provider: gcs
  configFile: bucket.yaml
  config: ""
  gcsCredentials: ""

replicaLabelName: replica
